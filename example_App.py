# A Simple CLI only application to give you an idea of how to use 'pyCrust'
# Written using Python 3.10.5 64-Bit

import time
import pyCrust

'''
If you wish to use logging for your project, you should initialize before
any other features. This is to start the log handlers before we attempt to
send output to log files.

Log Levels:
    0 ... Print Statements Only
    1 ... Standard Level Logging written to 'main.log'
    2 ... Debug Level logging written to 'main.log'

'''
applog = pyCrust.Logging()


'''
The config file is generated by a dictionary object, defined below.
This will be converted to a .JSON or .XML file based on the chosen format.
'''
example_config = {
    'version': '0.0',
    'username': 'toyolandi',
    'theme': 'Resetto'
}
config = pyCrust.Config(example_config, log_level=1)

'''
When ever you need to reference something in the config file, simply use the 
<config_object>.get_config() method. This will return the most recent version
of the 'config.json' or 'config.xml' file.
'''
#print('$', config.get_config())
pyCrust.write(config.get_config(), 2)

'''
Database Operations
'''
pyCrust.Sqlite()

'''
UI Example
'''
import tkinter as tk

rootui = pyCrust.UI()
# Setting what theme I want.
rootui.use_theme('Resetti')

# Add your own widgets here.

class ExampleWidget(tk.Frame):
    def __init__(self, master):
        super().__init__(master=master)

        self.button = tk.Button(
            self,
            text="Hide Console Window",
            command=self.hide_console
        )
        self.button.grid(row=0, column=0)

    def button_cmd(self):
        rootui.add_task(self.dummyTask, args=(2,9), name='LilDummy')

    def dummyTask(self, a, b):
        print('... IM WORKING ...')
        time.sleep(5)
        print(a + b * 16)

    def hide_console(self):
        rootui.minimize_console()

# Adding some widgets to the different 'zones'.
#rootui.set_frame(ExampleWidget)
#rootui.add_sidebar(ExampleWidget)
rootui.show_console()




rootui.launch()
# Anything beyond this point will be blocked by the UI 'mainloop'.